---
import {Image} from "astro:assets";
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import Layout from "./Layout.astro";

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage }: Props = Astro.props;
---

<Layout title={title} description={description} heroImage={heroImage} pubDate={pubDate} updateDate={updatedDate}>
	<article>
		<div class="grid place-items-center mb-6">
			{
				typeof(heroImage) == "string" ?
					<img width={1020} height={510} src={heroImage} alt="" loading="eager" /> :
					(heroImage && <Image class="rounded-xl max-h-96 w-auto" src={heroImage} alt="" loading="eager" />)}
		</div>
		<div class:list={[
				'prose prose-neutral prose-invert mx-auto leading-snug',
				'md:prose-lg lg:prose-xl text-justify hyphens-auto',
				'prose-p:text-base-content prose-headings:text-base-content',
				'prose-h1:text-primary prose-h1:mb-4',
				'prose-a:text-primary prose-p:leading-snug prose-strong:text-primary',
				'prose-img:rounded-xl prose-img:mx-auto']}>
			<div class="text-center">
				<h1>{title}</h1>
				<small class="my-3 text-base-content">
					<FormattedDate date={pubDate} />
					{
						updatedDate && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
				</small>
				<hr class="border-primary border-2 -mx-2 opacity-60" />
			</div>
			<slot />
			<hr class="border-primary border-2 -mx-2 opacity-60" />
		</div>
	</article>
</Layout>
